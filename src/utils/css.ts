import { getSystemFonts } from "@/utils/font";

export const commonCssProperties = [
  // 布局相关
  "display",
  "position",
  "top",
  "left",
  "right",
  "bottom",
  "zIndex",
  "float",
  "clear",
  "visibility",
  
  // 盒模型
  "width",
  "height",
  "margin",
  "padding",
  "border",
  "borderRadius",
  "boxSizing",
  "boxShadow",
  "overflow",
  "overflowX",
  "overflowY",
  
  // 文本样式
  "color",
  "fontSize",
  "fontFamily",
  "fontWeight",
  "textAlign",
  "lineHeight",
  "textDecoration",
  "textTransform",
  "letterSpacing",
  "wordSpacing",
  "textOverflow",
  "whiteSpace",
  
  // 背景
  "backgroundColor",
  "background",
  "backgroundImage",
  "backgroundPosition",
  "backgroundSize",
  "backgroundRepeat",
  
  // 弹性布局
  "flex",
  "flexDirection",
  "flexWrap",
  "justifyContent",
  "alignItems",
  "alignContent",
  "order",
  "flexGrow",
  "flexShrink",
  "flexBasis",
  
  // 网格布局
  "grid",
  "gridTemplateColumns",
  "gridTemplateRows",
  "gridColumn",
  "gridRow",
  "gridArea",
  "gap",
  "rowGap",
  "columnGap",
  
  // 变换与动画
  "transform",
  "transition",
  "transitionDuration",
  "transitionTimingFunction",
  "transitionProperty",
  "animation",
  "animationDuration",
  "animationTimingFunction",
  "animationDelay",
  "animationIterationCount",
  "animationDirection",
  "animationFillMode",
  "animationName",
  
  // 其他
  "cursor",
  "opacity",
  "outline",
  "outlineColor",
  "outlineWidth",
  "outlineOffset",
  "resize",
  "userSelect",
  "pointerEvents",
  "clipPath",
  "mask",
  "maskImage",
  "maskPosition",
  "maskSize",
  "maskRepeat",
  "filter",
  "backdropFilter",
  "perspective",
  "perspectiveOrigin",
  "transformStyle",
  "transformOrigin",
  "willChange",
  "scrollBehavior",
  "scrollSnapType",
  "scrollSnapAlign",
  "scrollMargin",
  "scrollPadding",
  "objectFit",
  "objectPosition",
  "mixBlendMode",
  "isolation",
  "appearance",
  "caretColor",
  "accentColor",
  "overscrollBehavior",
  "overscrollBehaviorX",
  "overscrollBehaviorY",
  "touchAction",
  "fontSmoothing",
  "textSizeAdjust",
  "imageRendering",
  "shapeOutside",
  "shapeMargin",
  "clip",
  "zoom"
];

// 将上述数组 进行映射 转成对象形式，对象的键是数组的值，对象的值是一个对象，包括以下属性：中文名称zh（需要根据数组的值进行翻译），英文名称en（数组的值）
export const cssProperties1: ObjectType = {
  color: {
    zh: "颜色",
    en: "color",
    type: "color",
    values: [],
  },
  fontSize: {
    zh: "字体大小",
    en: "fontSize",
    type: "length",
    values: [],
  },
  fontFamily: {
    zh: "字体家族",
    en: "fontFamily",
    type: "string",
    values: [],
  },
  backgroundColor: {
    zh: "背景颜色",
    en: "backgroundColor",
    type: "color",
    values: [],
  },
  width: {
    zh: "宽度",
    en: "width",
    type: "length",
    values: [],
  },
  height: {
    zh: "高度",
    en: "height",
    type: "length",
    values: [],
  },
  margin: {
    zh: "外边距",
    en: "margin",
    type: "length",
    values: [],
  },
  padding: {
    zh: "内边距",
    en: "padding",
    type: "length",
    values: [],
  },
  border: {
    zh: "边框",
    en: "border",
    type: "string",
    values: [],
  },
  display: {
    zh: "显示",
    en: "display",
    type: "string",
    values: ["block", "inline", "inline-block", "flex", "grid", "none"],
  },
  position: {
    zh: "定位",
    en: "position",
    type: "string",
    values: ["static", "relative", "absolute", "fixed", "sticky"],
  },
  top: {
    zh: "顶部",
    en: "top",
    type: "length",
    values: [],
  },
  left: {
    zh: "左边",
    en: "left",
    type: "length",
    values: [],
  },
  right: {
    zh: "右边",
    en: "right",
    type: "length",
    values: [],
  },
  bottom: {
    zh: "底部",
    en: "bottom",
    type: "length",
    values: [],
  },
  zIndex: {
    zh: "z索引",
    en: "zIndex",
    type: "number",
    values: [],
  },
  textAlign: {
    zh: "文本对齐",
    en: "textAlign",
    type: "string",
    values: ["left", "right", "center", "justify"],
  },
  lineHeight: {
    zh: "行高",
    en: "lineHeight",
    type: "length",
    values: [],
  },
  fontWeight: {
    zh: "字体重量",
    en: "fontWeight",
    type: "string",
    values: [
      "normal",
      "bold",
      "bolder",
      "lighter",
      "100",
      "200",
      "300",
      "400",
      "500",
      "600",
      "700",
      "800",
      "900",
    ],
  },
  background: {
    zh: "背景",
    en: "background",
    type: "string",
    values: [],
  },
  backgroundImage: {
    zh: "背景图片",
    en: "backgroundImage",
    type: "string",
    values: [],
  },
  backgroundPosition: {
    zh: "背景位置",
    en: "backgroundPosition",
    type: "string",
    values: ["left", "right", "center", "top", "bottom"],
  },
  backgroundSize: {
    zh: "背景大小",
    en: "backgroundSize",
    type: "string",
    values: ["cover", "contain", "auto"],
  },
  backgroundRepeat: {
    zh: "背景重复",
    en: "backgroundRepeat",
    type: "string",
    values: ["repeat", "no-repeat", "repeat-x", "repeat-y"],
  },
  borderRadius: {
    zh: "圆角",
    en: "borderRadius",
    type: "length",
    values: [],
  },
  boxShadow: {
    zh: "盒子阴影",
    en: "boxShadow",
    type: "string",
    values: [],
  },
  opacity: {
    zh: "不透明度",
    en: "opacity",
    type: "number",
    values: [],
  },
  cursor: {
    zh: "光标",
    en: "cursor",
    type: "string",
    values: ["auto", "pointer", "default", "text", "move", "not-allowed"],
  },
  overflow: {
    zh: "溢出",
    en: "overflow",
    type: "string",
    values: ["visible", "hidden", "scroll", "auto"],
  },
  overflowX: {
    zh: "水平溢出",
    en: "overflowX",
    type: "string",
    values: ["visible", "hidden", "scroll", "auto"],
  },
  overflowY: {
    zh: "垂直溢出",
    en: "overflowY",
    type: "string",
    values: ["visible", "hidden", "scroll", "auto"],
  },
  float: {
    zh: "浮动",
    en: "float",
    type: "string",
    values: ["left", "right", "none"],
  },
  clear: {
    zh: "清除",
    en: "clear",
    type: "string",
    values: ["left", "right", "both", "none"],
  },
  visibility: {
    zh: "可见性",
    en: "visibility",
    type: "string",
    values: ["visible", "hidden", "collapse"],
  },
  whiteSpace: {
    zh: "空白",
    en: "whiteSpace",
    type: "string",
    values: ["normal", "nowrap", "pre", "pre-wrap", "pre-line"],
  },
  textDecoration: {
    zh: "文本装饰",
    en: "textDecoration",
    type: "string",
    values: ["none", "underline", "overline", "line-through", "blink"],
  },
  textTransform: {
    zh: "文本转换",
    en: "textTransform",
    type: "string",
    values: ["none", "capitalize", "uppercase", "lowercase"],
  },
  letterSpacing: {
    zh: "字母间距",
    en: "letterSpacing",
    type: "length",
    values: [],
  },
  wordSpacing: {
    zh: "单词间距",
    en: "wordSpacing",
    type: "length",
    values: [],
  },
  textOverflow: {
    zh: "文本溢出",
    en: "textOverflow",
    type: "string",
    values: ["clip", "ellipsis"],
  },
  verticalAlign: {
    zh: "垂直对齐",
    en: "verticalAlign",
    type: "string",
    values: [
      "baseline",
      "sub",
      "super",
      "top",
      "text-top",
      "middle",
      "bottom",
      "text-bottom",
    ],
  },
  flex: {
    zh: "弹性",
    en: "flex",
    type: "string",
    values: [],
  },
  flexDirection: {
    zh: "弹性方向",
    en: "flexDirection",
    type: "string",
    values: ["row", "row-reverse", "column", "column-reverse"],
  },
  flexWrap: {
    zh: "弹性换行",
    en: "flexWrap",
    type: "string",
    values: ["nowrap", "wrap", "wrap-reverse"],
  },
  justifyContent: {
    zh: "内容对齐",
    en: "justifyContent",
    type: "string",
    values: [
      "flex-start",
      "flex-end",
      "center",
      "space-between",
      "space-around",
      "space-evenly",
    ],
  },
  alignItems: {
    zh: "项目对齐",
    en: "alignItems",
    type: "string",
    values: ["flex-start", "flex-end", "center", "baseline", "stretch"],
  },
  alignContent: {
    zh: "对齐内容",
    en: "alignContent",
    type: "string",
    values: [
      "flex-start",
      "flex-end",
      "center",
      "space-between",
      "space-around",
      "stretch",
    ],
  },
  order: {
    zh: "顺序",
    en: "order",
    type: "number",
    values: [],
  },
  flexGrow: {
    zh: "弹性增长",
    en: "flexGrow",
    type: "number",
    values: [],
  },
  flexShrink: {
    zh: "弹性收缩",
    en: "flexShrink",
    type: "number",
    values: [],
  },
  flexBasis: {
    zh: "弹性基础",
    en: "flexBasis",
    type: "length",
    values: [],
  },
  grid: {
    zh: "网格",
    en: "grid",
    type: "string",
    values: [],
  },
  gridTemplateColumns: {
    zh: "网格模板列",
    en: "gridTemplateColumns",
    type: "string",
    values: [],
  },
  gridTemplateRows: {
    zh: "网格模板行",
    en: "gridTemplateRows",
    type: "string",
    values: [],
  },
  gridColumn: {
    zh: "网格列",
    en: "gridColumn",
    type: "string",
    values: [],
  },
  gridRow: {
    zh: "网格行",
    en: "gridRow",
    type: "string",
    values: [],
  },
  gridArea: {
    zh: "网格区域",
    en: "gridArea",
    type: "string",
    values: [],
  },
  gap: {
    zh: "间隙",
    en: "gap",
    type: "length",
    values: [],
  },
  rowGap: {
    zh: "行间隙",
    en: "rowGap",
    type: "length",
    values: [],
  },
  columnGap: {
    zh: "列间隙",
    en: "columnGap",
    type: "length",
    values: [],
  },
  transform: {
    zh: "变换",
    en: "transform",
    type: "string",
    values: [],
  },
  transition: {
    zh: "过渡",
    en: "transition",
    type: "string",
    values: [],
  },
  transitionDuration: {
    zh: "过渡时长",
    en: "transitionDuration",
    type: "time",
    values: [],
  },
  transitionTimingFunction: {
    zh: "过渡时间函数",
    en: "transitionTimingFunction",
    type: "string",
    values: ["ease", "linear", "ease-in", "ease-out", "ease-in-out"],
  },
  transitionProperty: {
    zh: "过渡属性",
    en: "transitionProperty",
    type: "string",
    values: [],
  },
  animation: {
    zh: "动画",
    en: "animation",
    type: "string",
    values: [],
  },
  animationDuration: {
    zh: "动画时长",
    en: "animationDuration",
    type: "time",
    values: [],
  },
  animationTimingFunction: {
    zh: "动画时间函数",
    en: "animationTimingFunction",
    type: "string",
    values: ["ease", "linear", "ease-in", "ease-out", "ease-in-out"],
  },
  animationDelay: {
    zh: "动画延迟",
    en: "animationDelay",
    type: "time",
    values: [],
  },
  animationIterationCount: {
    zh: "动画迭代次数",
    en: "animationIterationCount",
    type: "number",
    values: [],
  },
  animationDirection: {
    zh: "动画方向",
    en: "animationDirection",
    type: "string",
    values: ["normal", "reverse", "alternate", "alternate-reverse"],
  },
  animationFillMode: {
    zh: "动画填充模式",
    en: "animationFillMode",
    type: "string",
    values: ["none", "forwards", "backwards", "both"],
  },
  animationName: {
    zh: "动画名称",
    en: "animationName",
    type: "string",
    values: [],
  },
  boxSizing: {
    zh: "盒子大小",
    en: "boxSizing",
    type: "string",
    values: ["content-box", "border-box"],
  },
  outline: {
    zh: "轮廓",
    en: "outline",
    type: "string",
    values: [],
  },
  outlineColor: {
    zh: "轮廓颜色",
    en: "outlineColor",
    type: "color",
    values: [],
  },
  outlineWidth: {
    zh: "轮廓宽度",
    en: "outlineWidth",
    type: "length",
    values: [],
  },
  outlineOffset: {
    zh: "轮廓偏移",
    en: "outlineOffset",
    type: "length",
    values: [],
  },
  resize: {
    zh: "调整大小",
    en: "resize",
    type: "string",
    values: ["none", "both", "horizontal", "vertical"],
  },
  userSelect: {
    zh: "用户选择",
    en: "userSelect",
    type: "string",
    values: ["auto", "none", "text", "all"],
  },
  pointerEvents: {
    zh: "指针事件",
    en: "pointerEvents",
    type: "string",
    values: [
      "auto",
      "none",
      "visiblePainted",
      "visibleFill",
      "visibleStroke",
      "visible",
      "painted",
      "fill",
      "stroke",
      "all",
    ],
  },
  clipPath: {
    zh: "裁剪路径",
    en: "clipPath",
    type: "string",
    values: [],
  },
  mask: {
    zh: "遮罩",
    en: "mask",
    type: "string",
    values: [],
  },
  maskImage: {
    zh: "遮罩图片",
    en: "maskImage",
    type: "string",
    values: [],
  },
  maskPosition: {
    zh: "遮罩位置",
    en: "maskPosition",
    type: "string",
    values: [],
  },
  maskSize: {
    zh: "遮罩大小",
    en: "maskSize",
    type: "string",
    values: [],
  },
  maskRepeat: {
    zh: "遮罩重复",
    en: "maskRepeat",
    type: "string",
    values: [],
  },
  filter: {
    zh: "滤镜",
    en: "filter",
    type: "string",
    values: [],
  },
  backdropFilter: {
    zh: "背景滤镜",
    en: "backdropFilter",
    type: "string",
    values: [],
  },
  perspective: {
    zh: "透视",
    en: "perspective",
    type: "length",
    values: [],
  },
  perspectiveOrigin: {
    zh: "透视原点",
    en: "perspectiveOrigin",
    type: "string",
    values: [],
  },
  transformStyle: {
    zh: "变换样式",
    en: "transformStyle",
    type: "string",
    values: ["flat", "preserve-3d"],
  },
  transformOrigin: {
    zh: "变换原点",
    en: "transformOrigin",
    type: "string",
    values: [],
  },
  willChange: {
    zh: "将改变",
    en: "willChange",
    type: "string",
    values: [],
  },
  scrollBehavior: {
    zh: "滚动行为",
    en: "scrollBehavior",
    type: "string",
    values: ["auto", "smooth"],
  },
  scrollSnapType: {
    zh: "滚动对齐",
    en: "scrollSnapType",
    type: "string",
    values: ["none", "x", "y", "block", "inline", "both"],
  },
  scrollSnapAlign: {
    zh: "滚动对齐",
    en: "scrollSnapAlign",
    type: "string",
    values: ["start", "end", "center", "nearest"],
  },
  scrollMargin: {
    zh: "滚动外边距",
    en: "scrollMargin",
    type: "length",
    values: [],
  },
  scrollPadding: {
    zh: "滚动内边距",
    en: "scrollPadding",
    type: "length",
    values: [],
  },
  objectFit: {
    zh: "对象适应",
    en: "objectFit",
    type: "string",
    values: ["fill", "contain", "cover", "none", "scale-down"],
  },
  objectPosition: {
    zh: "对象位置",
    en: "objectPosition",
    type: "string",
    values: [],
  },
  mixBlendMode: {
    zh: "混合模式",
    en: "mixBlendMode",
    type: "string",
    values: [
      "normal",
      "multiply",
      "screen",
      "overlay",
      "darken",
      "lighten",
      "color-dodge",
      "color-burn",
      "hard-light",
      "soft-light",
      "difference",
      "exclusion",
      "hue",
      "saturation",
      "color",
      "luminosity",
    ],
  },
  isolation: {
    zh: "隔离",
    en: "isolation",
    type: "string",
    values: ["auto", "isolate"],
  },
  appearance: {
    zh: "外观",
    en: "appearance",
    type: "string",
    values: [
      "none",
      "auto",
      "button",
      "checkbox",
      "radio",
      "textfield",
      "menulist",
      "listbox",
      "meter",
      "progress-bar",
      "push-button",
      "searchfield",
      "slider-horizontal",
      "square-button",
      "textarea",
    ],
  },
  caretColor: {
    zh: "光标颜色",
    en: "caretColor",
    type: "color",
    values: [],
  },
  accentColor: {
    zh: "强调色",
    en: "accentColor",
    type: "color",
    values: [],
  },
  overscrollBehavior: {
    zh: "滚动行为",
    en: "overscrollBehavior",
    type: "string",
    values: ["auto", "contain", "none"],
  },
  overscrollBehaviorX: {
    zh: "水平滚动行为",
    en: "overscrollBehaviorX",
    type: "string",
    values: ["auto", "contain", "none"],
  },
  overscrollBehaviorY: {
    zh: "垂直滚动行为",
    en: "overscrollBehaviorY",
    type: "string",
    values: ["auto", "contain", "none"],
  },
  touchAction: {
    zh: "触摸动作",
    en: "touchAction",
    type: "string",
    values: ["auto", "none", "pan-x", "pan-y", "manipulation"],
  },
  fontSmoothing: {
    zh: "字体平滑",
    en: "fontSmoothing",
    type: "string",
    values: ["auto", "none", "antialiased", "subpixel-antialiased"],
  },
  textSizeAdjust: {
    zh: "文本大小调整",
    en: "textSizeAdjust",
    type: "string",
    values: ["auto", "none", "100%"],
  },
  imageRendering: {
    zh: "图像渲染",
    en: "imageRendering",
    type: "string",
    values: ["auto", "crisp-edges", "pixelated"],
  },
  shapeOutside: {
    zh: "形状外部",
    en: "shapeOutside",
    type: "string",
    values: [],
  },
  shapeMargin: {
    zh: "形状外边距",
    en: "shapeMargin",
    type: "length",
    values: [],
  },
  clip: {
    zh: "裁剪",
    en: "clip",
    type: "string",
    values: ["auto", "rect"],
  },
  zoom: {
    zh: "缩放",
    en: "zoom",
    type: "string",
    values: ["normal", "reset"],
  },
};

getSystemFonts().then(data => {
  cssProperties1.fontFamily.values = (data || []).map(item => item.value)
});

export const cssProperties = commonCssProperties.reduce(
  (acc, key) => {
    acc[key] = cssProperties1[key];
    return acc;
  },
  {} as typeof cssProperties1
)
